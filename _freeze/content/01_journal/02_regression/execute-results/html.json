{
  "hash": "d75d71bda9f3bc2b0b140c56d39908d2",
  "result": {
    "markdown": "---\ntitle: \"Supervised ML - Regression\"\nauthor: \"Philip Suskin\"\n---\n\n\n# Libraries\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-1_cd37d7e393582a739bbba7464457b07a'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: PerformanceAnalytics\n#> Loading required package: xts\n#> Loading required package: zoo\n#> \n#> Attaching package: 'zoo'\n#> \n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> \n#> \n#> ######################### Warning from 'xts' package ##########################\n#> #                                                                             #\n#> # The dplyr lag() function breaks how base R's lag() function is supposed to  #\n#> # work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n#> # source() into this session won't work correctly.                            #\n#> #                                                                             #\n#> # Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n#> # conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n#> # dplyr from breaking base R's lag() function.                                #\n#> #                                                                             #\n#> # Code in packages is not affected. It's protected by R's namespace mechanism #\n#> # Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#> #                                                                             #\n#> ###############################################################################\n#> \n#> Attaching package: 'xts'\n#> \n#> The following objects are masked from 'package:dplyr':\n#> \n#>     first, last\n#> \n#> \n#> Attaching package: 'PerformanceAnalytics'\n#> \n#> The following object is masked from 'package:graphics':\n#> \n#>     legend\n#> \n#> Loading required package: quantmod\n#> Loading required package: TTR\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n```\n:::\n\n```{.r .cell-code}\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(workflows)\nlibrary(rsample)\nlibrary(parsnip)\n```\n:::\n\n\n# Data preparation\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-2_566426dcde965a96ab3bd410cf322dab'}\n\n```{.r .cell-code}\nbike_orderlines_tbl <- read_rds(\"../../Business Decisions with Machine Learning/bike_orderlines.rds\")\n\nsales_tbl <- bike_orderlines_tbl %>%\n  select(total_price, model, category_2, frame_material) %>%\n  group_by(model, category_2, frame_material) %>%\n  summarise(total_sales = sum(total_price)) %>%\n  ungroup() %>%\n  arrange(desc(total_sales))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'model', 'category_2'. You can override\n#> using the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsales_tbl %>%\n  mutate(category_2 = as_factor(category_2) %>%\n           fct_reorder(total_sales, .fun = max) %>%\n           fct_rev()) %>%\n  ggplot(aes(frame_material, total_sales)) +\n  geom_violin() +\n  geom_jitter(width = 0.1, alpha = 0.5, color = \"#2c3e50\") +\n  facet_wrap(~ category_2) +\n  scale_y_continuous(labels = scales::dollar_format(scale = 1e-6, suffix = \"M\", accuracy = 0.1)) +\n  theme_tq() +\n  labs(\n      title = \"Total Sales for Each Model\",\n      x = \"Frame Material\", y = \"Revenue\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Groups with fewer than two data points have been dropped.\n#> Groups with fewer than two data points have been dropped.\n#> Groups with fewer than two data points have been dropped.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in max(data$density): no non-missing arguments to max; returning -Inf\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Computation failed in `stat_ydensity()`\n#> Caused by error in `$<-.data.frame`:\n#> ! replacement has 1 row, data has 0\n```\n:::\n\n::: {.cell-output-display}\n![](02_regression_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# Recipe\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-3_4f9d619c1cbc598387b3b6d115b60cac'}\n\n```{.r .cell-code}\nrecipe_obj <- recipe(price ~ frame_material + category_2 + model, data = bike_orderlines_tbl) %>%\n  step_dummy(all_nominal(), -frame_material, -category_2, -model, one_hot = T) %>%\n  prep()\n```\n:::\n\n\n# Training and testing data\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-4_c71778fd1c1488785c2c3302893a3387'}\n\n```{.r .cell-code}\nbike_orderlines_tbl %>% distinct(category_2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"category_2\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Trail\"},{\"1\":\"Race\"},{\"1\":\"Triathlon Bike\"},{\"1\":\"Dirt Jump\"},{\"1\":\"City\"},{\"1\":\"Cyclocross\"},{\"1\":\"Enduro\"},{\"1\":\"E-Mountain\"},{\"1\":\"All-Road\"},{\"1\":\"Endurance\"},{\"1\":\"E-City\"},{\"1\":\"Cross-Country\"},{\"1\":\"Touring\"},{\"1\":\"E-Gravel\"},{\"1\":\"Adventure\"},{\"1\":\"Downhill\"},{\"1\":\"Fat Bikes\"},{\"1\":\"E-Fitness\"},{\"1\":\"E-Trekking\"},{\"1\":\"E-Road\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nset.seed(1)\n\nsplit_obj <- rsample::initial_split(bike_orderlines_tbl, prop = 0.8, strata = \"category_2\")\nsplit_obj %>% training() %>% distinct(category_2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"category_2\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Cyclocross\"},{\"1\":\"Endurance\"},{\"1\":\"Triathlon Bike\"},{\"1\":\"All-Road\"},{\"1\":\"Touring\"},{\"1\":\"E-Gravel\"},{\"1\":\"Enduro\"},{\"1\":\"E-City\"},{\"1\":\"Cross-Country\"},{\"1\":\"E-Mountain\"},{\"1\":\"E-Trekking\"},{\"1\":\"City\"},{\"1\":\"Downhill\"},{\"1\":\"Fat Bikes\"},{\"1\":\"Dirt Jump\"},{\"1\":\"E-Fitness\"},{\"1\":\"Adventure\"},{\"1\":\"Race\"},{\"1\":\"E-Road\"},{\"1\":\"Trail\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nsplit_obj %>% testing() %>% distinct(category_2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"category_2\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Trail\"},{\"1\":\"Triathlon Bike\"},{\"1\":\"Dirt Jump\"},{\"1\":\"City\"},{\"1\":\"All-Road\"},{\"1\":\"E-Mountain\"},{\"1\":\"Cross-Country\"},{\"1\":\"Touring\"},{\"1\":\"Adventure\"},{\"1\":\"Downhill\"},{\"1\":\"Endurance\"},{\"1\":\"Race\"},{\"1\":\"E-City\"},{\"1\":\"Enduro\"},{\"1\":\"E-Gravel\"},{\"1\":\"Cyclocross\"},{\"1\":\"Fat Bikes\"},{\"1\":\"E-Trekking\"},{\"1\":\"E-Fitness\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ntrain_tbl <- training(split_obj)\ntest_tbl  <- testing(split_obj)\n\ntrain_tbl <- train_tbl %>% set_names(str_replace_all(names(train_tbl), \" |-\", \"_\"))\ntest_tbl  <- test_tbl  %>% set_names(str_replace_all(names(test_tbl),  \" |-\", \"_\"))\n\ntrain_transformed_tbl <- bake(recipe_obj, new_data = train_tbl)\ntest_transformed_tbl <- bake(recipe_obj, new_data = test_tbl) \n```\n:::\n\n\n# Model\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-5_96da5bf0d1e5b46f60b6fbeca0325eb7'}\n\n```{.r .cell-code}\nmodel_reg_lm <- linear_reg(mode = \"regression\") %>% set_engine(\"lm\")\n```\n:::\n\n\n# Workflow\n\n\n::: {.cell hash='02_regression_cache/html/unnamed-chunk-6_a25c680fb5513a9182132a86cfe08a5e'}\n\n```{.r .cell-code}\nworkflow <- workflow(preprocessor = NULL, spec = NULL) %>% \n  workflows::add_recipe(recipe_obj) %>%\n  workflows::add_model(model_reg_lm)\n\nfitted_workflow <- fit(workflow, train_transformed_tbl)\n\nmetrics <- fitted_workflow %>%\n           predict(new_data = test_transformed_tbl) %>%\n           bind_cols(test_transformed_tbl %>% select(price)) %>%\n           yardstick::metrics(truth = price, estimate = .pred) %>% print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      56.0  \n#> 2 rsq     standard       0.999\n#> 3 mae     standard       7.40\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}