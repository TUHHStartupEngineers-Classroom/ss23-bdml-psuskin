{
  "hash": "c460e441b8a40dec1a90b46ed80a637d",
  "result": {
    "markdown": "---\ntitle: \"Explaining Black-Box Models With LIME\"\nauthor: \"Philip Suskin\"\n---\n\n\n# Sadly doesn't work due to \"Error: java.lang.IllegalArgumentException: Test/Validation dataset has no columns in common with the training set\"\n\n\n::: {.cell hash='05_black_box_cache/html/unnamed-chunk-1_98a4d5febe34f5a23a5e33835deccf52'}\n\n```{.r .cell-code}\n# # LIME FEATURE EXPLANATION ----\n# \n# # 1. Setup ----\n# \n# # Load Libraries\n# library(h2o)\n# library(recipes)\n# library(readxl)\n# library(tidyverse)\n# library(tidyquant)\n# library(lime)\n# library(rsample)\n# \n# # Load Data\n# employee_attrition_tbl <- read_csv(\"../../HR-Employee-Attrition.csv\")\n# definitions_raw_tbl <- read_excel(\"../../data_definitions.xlsx\", sheet = 1, col_names = FALSE)\n# \n# process_hr_data_readable <- function(data, definitions_tbl) {\n#   \n#   definitions_list <- definitions_tbl %>%\n#     fill(...1, .direction = \"down\") %>%\n#     filter(!is.na(...2)) %>%\n#     separate(...2, into = c(\"key\", \"value\"), sep = \" '\", remove = TRUE) %>%\n#     rename(column_name = ...1) %>%\n#     mutate(key = as.numeric(key)) %>%\n#     mutate(value = value %>% str_replace(pattern = \"'\", replacement = \"\")) %>%\n#     split(.$column_name) %>%\n#     map(~ select(., -column_name)) %>%\n#     map(~ mutate(., value = as_factor(value))) \n#   \n#   for (i in seq_along(definitions_list)) {\n#     list_name <- names(definitions_list)[i]\n#     colnames(definitions_list[[i]]) <- c(list_name, paste0(list_name, \"_value\"))\n#   }\n#   \n#   data_merged_tbl <- list(HR_Data = data) %>%\n#     append(definitions_list, after = 1) %>%\n#     reduce(left_join) %>%\n#     select(-one_of(names(definitions_list))) %>%\n#     set_names(str_replace_all(names(.), pattern = \"_value\", \n#                               replacement = \"\")) %>%\n#     select(sort(names(.))) %>%\n#     mutate_if(is.character, as.factor) %>%\n#     mutate(\n#       BusinessTravel = BusinessTravel %>% fct_relevel(\"Non-Travel\", \n#                                                       \"Travel_Rarely\", \n#                                                       \"Travel_Frequently\"),\n#       MaritalStatus  = MaritalStatus %>% fct_relevel(\"Single\", \n#                                                      \"Married\", \n#                                                      \"Divorced\")\n#     )\n#   \n#   return(data_merged_tbl)\n#   \n# }\n# \n# employee_attrition_readable_tbl <- process_hr_data_readable(employee_attrition_tbl, definitions_raw_tbl)\n# \n# # Split into test and train\n# set.seed(seed = 1113)\n# split_obj <- rsample::initial_split(employee_attrition_readable_tbl, prop = 0.85)\n# \n# # Assign training and test data\n# train_readable_tbl <- training(split_obj)\n# test_readable_tbl <- testing(split_obj)\n# \n# # ML Preprocessing Recipe \n# recipe_obj <- recipe(Attrition ~ ., data = train_readable_tbl) %>%\n#   step_zv(all_predictors()) %>%\n#   step_mutate_at(c(\"JobLevel\", \"StockOptionLevel\"), fn = as.factor) %>% \n#   prep()\n# \n# recipe_obj\n# \n# train_tbl <- bake(recipe_obj, new_data = train_readable_tbl)\n# test_tbl <- bake(recipe_obj, new_data = test_readable_tbl)\n# \n# # 2. Models ----\n# \n# h2o.init()\n# \n# automl_leader <- h2o.loadModel(\"h2o_models/deeplearning_grid_model_14\")\n# automl_leader\n# \n# # 3. LIME ----\n# \n# # 3.1 Making Predictions ----\n# \n# predictions_tbl <- automl_leader %>% \n#   h2o.predict(newdata = as.h2o(test_tbl)) %>%\n#   as.tibble() %>%\n#   bind_cols(\n#     test_tbl %>%\n#       select(Attrition, EmployeeNumber)\n#   )\n# \n# predictions_tbl\n# \n# # 3.2 Single Explanation ----\n# \n# explainer <- train_tbl %>%\n#   select(-Attrition) %>%\n#   lime(\n#     model = automl_leader,\n#     bin_continuous = TRUE,\n#     n_bins = 4,\n#     quantile_bins = TRUE\n#   )\n# \n# explainer\n# \n# explanation <- test_tbl %>%\n#   slice(1) %>%\n#   select(-Attrition) %>%\n#   lime::explain(\n#     \n#     # Pass our explainer object\n#     explainer = explainer,\n#     # Because it is a binary classification model: 1\n#     n_labels = 1,\n#     # number of features to be returned\n#     n_features = 8,\n#     # number of localized linear models\n#     n_permutations = 5000,\n#     # Let's start with 1\n#     kernel_width = 1\n#   )\n# \n# explanation\n# \n# explanation %>%\n#   as.tibble() %>%\n#   select(feature:prediction)\n# \n# g <- plot_features(explanation = explanation, ncol = 1)\n# \n# # 3.3 Multiple Explanations ----\n# \n# explanation <- test_tbl %>%\n#   slice(1:20) %>%\n#   select(-Attrition) %>%\n#   lime::explain(\n#     explainer = explainer,\n#     n_labels = 1,\n#     n_features = 8,\n#     n_permutations = 5000,\n#     kernel_width = 0.5\n#   )\n# \n# explanation %>%\n#   as.tibble()\n# \n# plot_features(explanation, ncol = 4)\n# \n# plot_explanations(explanation)\n```\n:::\n\n\n# Challenge 1\n\n\n::: {.cell hash='05_black_box_cache/html/unnamed-chunk-2_c8fc40acc1232bfa88bbf55035381435'}\n\n```{.r .cell-code}\n# library(ggplot2)\n# \n# explanation %>% as.tibble()\n# \n# # Reference\n# explanation %>% filter(case == 1) %>% plot_features()\n# \n# # My version\n# explanation %>%\n#     filter(case == 1) %>%\n#     ggplot(aes(x = fct_reorder(feature,abs(feature_weight)),y = feature_weight,fill = feature_weight < 0)) +\n#     coord_flip() +\n#     geom_col(just = 0.5) + \n#     labs( title = paste0(\n#       \"Case: \",\"1\",\"\\n\",\n#       \"Label: \",filter(explanation,case == 1)[1,]$label,\"\\n\",\n#       \"Probability: \",filter(explanation,case == 1)[1,]$label_prob%>%round(2),\"\\n\",\n#       \"Explanation Fit: \",filter(explanation,case == 1)[1,]$model_r2%>%round(2),\"\\n\"\n#       ),\n#       x = \"Feature\",\n#       y = \"Weight\",\n#       fill = \"\"\n#     ) +\n#     scale_x_discrete(labels=explanation %>% filter(case == 1) %>% arrange(abs(feature_weight)) %>% .$feature_desc) +\n#     theme(legend.position = \"bottom\",\n#           panel.background = element_blank(),\n#           panel.grid.major.x = element_line(color=\"#EBEBEB\"),\n#           panel.grid.minor.x = element_line(color=\"#EBEBEB\")\n#     ) +\n#     scale_fill_manual(values=c(\"#4682B4\", \"#B22222\"),labels=c(\"Supports\",\"Contradics\"))\n```\n:::\n\n\n# Challenge 2\n\n\n::: {.cell hash='05_black_box_cache/html/unnamed-chunk-3_45487c609d0ccdbbaf2f4d608fdf1452'}\n\n```{.r .cell-code}\n# # Reference\n# plot_explanations(explanation)\n# \n# # My version\n# explanation %>%\n#     ggplot(aes(x = case,y = fct_reorder(feature,abs(label_prob)),fill = feature_weight)) +\n#     facet_wrap(~label) + \n#     geom_tile() + \n#     labs(\n#       x = \"Case\",\n#       y = \"Feature\"\n#     ) +\n#     scale_y_discrete(labels=explanation%>% arrange(abs(label_prob)) %>% .$feature_desc) +\n#     theme(panel.background = element_blank(),\n#           panel.grid = element_blank(),\n#           axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)\n#     ) +\n#   scale_fill_gradient2('Feature \\n weight', low = '#B9362F', mid = \"white\", high = '#4B85B6')\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}